#+TITLE: R E I N D E E R E F F E C T
#+OPTIONS: toc:nil title:nil
#+HTML_HEAD_EXTRA: <style>.title {display:none;} .abstract {display:inline} </style>

#+begin_index-entry
	#+begin_pubdate
		2020-05-05
	#+end_pubdate
	#+begin_post-title
		[[./2020/05/05/index.org][Making and Slaying Monster Sudoku]]
	#+end_post-title
        #+begin_post-tags
                [[./tags.org::*backtracking][backtracking]] [[./tags.org::*np-complete][np-complete]] [[./tags.org::*search][search]] [[./tags.org::*sudoku][sudoku]] 
        #+end_post-tags
	#+begin_abstract
		If you have a taste for NP-completeness, Sudoku, or literate programming, then
this one's for you.
	#+end_abstract
#+end_index-entry
#+begin_index-entry
	#+begin_pubdate
		2019-01-16
	#+end_pubdate
	#+begin_post-title
		[[./2019/01/16/index.org][Recursive Descent: The Next Iteration]]
	#+end_post-title
        #+begin_post-tags
                [[./tags.org::*automata][automata]] [[./tags.org::*ebnf][ebnf]] [[./tags.org::*fizzbuzz][fizzbuzz]] [[./tags.org::*grammar][grammar]] [[./tags.org::*parsing][parsing]] 
        #+end_post-tags
	#+begin_abstract
		You've been tasked to implement a parser for yet another language---one with the
brevity of COBOL and the readability of APL. You're sick of writing
parsers. Surely a computer can do it, right?
	#+end_abstract
#+end_index-entry
#+begin_index-entry
	#+begin_pubdate
		2018-12-08
	#+end_pubdate
	#+begin_post-title
		[[./2018/12/08/index.org][Beyond Regular Expressions: Recursive Descent Parsing]]
	#+end_post-title
        #+begin_post-tags
                [[./tags.org::*automata][automata]] [[./tags.org::*grammar][grammar]] [[./tags.org::*parsing][parsing]] [[./tags.org::*regex][regex]] 
        #+end_post-tags
	#+begin_abstract
		Your eyes are bleeding, and trying to reliably extract information from C header
files using regular expressions has driven you to the brink of insanity. You can
admit that you've got a problem, but now what?
	#+end_abstract
#+end_index-entry
#+begin_index-entry
	#+begin_pubdate
		2018-06-24
	#+end_pubdate
	#+begin_post-title
		[[./2018/06/24/index.org][Under the Hood: Regular Expressions]]
	#+end_post-title
        #+begin_post-tags
                [[./tags.org::*automata][automata]] [[./tags.org::*regex][regex]] [[./tags.org::*state-machines][state-machines]] 
        #+end_post-tags
	#+begin_abstract
		Have you ever wondered what the hell it really means when you use a regular
expression, or why you shouldn't use regexes to parse HTML?  Then read on to
learn the foundations of how regular expression engines work.
	#+end_abstract
#+end_index-entry
#+begin_index-entry
	#+begin_pubdate
		2018-03-08
	#+end_pubdate
	#+begin_post-title
		[[./2018/03/08/index.org][Dynamic Programming for Fun and Profit]]
	#+end_post-title
        #+begin_post-tags
                [[./tags.org::*dynamic-programming][dynamic-programming]] [[./tags.org::*options][options]] 
        #+end_post-tags
	#+begin_abstract
		You're certain the price of that stock will take offâ€”your broker says so---but 
you don't want to commit all your money just yet. What are your options?
	#+end_abstract
#+end_index-entry
#+begin_index-entry
	#+begin_pubdate
		2018-01-20
	#+end_pubdate
	#+begin_post-title
		[[./2018/01/20/index.org][Skipping School with Finite State Machines]]
	#+end_post-title
        #+begin_post-tags
                [[./tags.org::*matrix-product][matrix-product]] [[./tags.org::*numpy][numpy]] [[./tags.org::*state-machines][state-machines]] 
        #+end_post-tags
	#+begin_abstract
		
	#+end_abstract
#+end_index-entry
